name: Test Reports

on:
  push:
  repository_dispatch:
  workflow_dispatch:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      run:
        required: true
        type: string

jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      # TODO also checkout the main branch if we want to use .sh scripts
      # alongside the .yml
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          path: main

      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages

      - uses: actions/setup-java@v3
        with:
          # Don't know which Java is the best.
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Download allure
        run: |
          curl -L -O https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.tgz
          tar -xf allure-2.20.0.tgz

      - name: Download results from other repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # better in a temp directory? See also RUNNER_TEMP
        run: |
          mkdir -p temp; cd temp

          # Some of these are results and others are reports.
          # In the future, upload results with a unique prefix.
          gh run download -p "allure-*" -R dholth/conda-package-handling 3300350049

          # strip the existing allure-results/ embedded in the .tar.gz
          find -name allure-results.tar.gz -exec tar -xf {} --strip-components=1 \;

      - name: Make report
        run: |
          # todo python
          cd gh-pages
          ../allure-2.20.0/bin/allure generate --clean ../temp

      - name: List everything
        run: ls -R

      # https://lannonbr.com/blog/2019-12-09-git-commit-in-actions/
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      # to keep track of history, even though we deploy gh-pages ourselves
      - name: commit
        run: |
          # Stage the file, commit and push
          cd gh-pages
          git add allure-report
          git commit -m "reports"
          git push origin gh-pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload report
          path: gh-pages/allure-report

  pages:

    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    needs: [report]

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

# https://docs.github.com/en/actions/using-workflows/reusing-workflows
#
# Will this workflow be able to checkout and push to its own repository, when called?
#
# jobs:
#   call-workflow-1-in-local-repo:
#     uses: octo-org/this-repo/.github/workflows/workflow-1.yml@172239021f7ba04fe7327647b213799853a9eb89
#   call-workflow-2-in-local-repo:
#     uses: ./.github/workflows/workflow-2.yml
#   call-workflow-in-another-repo:
#     uses: octo-org/another-repo/.github/workflows/workflow.yml@v1
