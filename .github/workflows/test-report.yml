name: Test Reports

on:
  push

jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: Download results from other repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # better in a temp directory? See also RUNNER_TEMP
        run: |
          mkdir -p temp; cd temp

          # Some of these are results and others are reports.
          # In the future, upload results with a unique prefix.
          gh run download -p "allure-*" -R dholth/conda-package-handling 3300350049

          # strip the existing allure-results/ embedded in the .tar.gz
          find -name allure-results.tar.gz -exec tar -xf {} --strip-components=1 \;

      - uses: actions/setup-java@v3
        with:
          # Don't know which Java is the best.
          distribution: 'temurin'
          java-version: '17'

      - run: |
          curl -L -O https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.tgz
          tar -xf allure-2.20.0.tgz

      - name: Make report
        run: |
          ./allure-2.20.0/bin/allure generate --clean temp

      - name: List everything
        run: ls -R

      # https://lannonbr.com/blog/2019-12-09-git-commit-in-actions/
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      # to keep track of history, even though we deploy gh-pages ourselves
      - name: commit
        run: |
          # Stage the file, commit and push
          git add allure-report
          git commit -m "reports"
          git push origin gh-pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload report
          path: allure-report

  pages:

    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    needs: [report]

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
