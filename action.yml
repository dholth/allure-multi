name: "Allure Multi"
description: "Generate multiple allure reports from artifacts and publish to gh-pages."
author: "dholth"
branding:
  icon: 'book'
  color: 'green'

# from actions/checkout
inputs:
  repository:
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
  ref:
    description: >
      The branch, tag or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that
      event.  Otherwise, uses the default branch.
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    default: ${{ github.token }}

defaults:
  run:
    shell: bash
  # it can accept shell: python!
  # this kind of action doesn't appear to accept a default shell

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v3
      with:
        # Don't know which Java is the best.
        distribution: 'temurin'
        java-version: '17'

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Download allure
      shell: bash
      run: |
        curl -L -O https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.tgz
        tar -xf allure-2.20.0.tgz

    # environments all set up.
    - name: Download results from other repository
      shell: bash
      env:
        # necessary to run gh cli
        GH_TOKEN: ${{ github.token }}
      run: |
        mkdir -p temp; cd temp

        # Some of these are results and others are reports.
        # In the future, upload results with a unique prefix.
        gh run download -p "allure-*" -R dholth/conda-package-handling 3300350049

        # strip the existing allure-results/ embedded in the .tar.gz
        find -name allure-results.tar.gz -exec tar -xf {} --strip-components=1 \;

    - name: Make report
      shell: bash
      run: |
        # todo python
        mkdir -p gh-pages
        cd gh-pages
        ../allure-2.20.0/bin/allure generate --clean ../temp

    - name: List everything
      shell: bash
      run: |
        ls -R
        pwd

        # this workflow?
        echo $GITHUB_ACTION_PATH
        ls -R $GITHUB_ACTION_PATH

        python3 --version

        env

#     # https://lannonbr.com/blog/2019-12-09-git-commit-in-actions/
#     - name: setup git config
#       run: |
#         cd gh-pages # not a global config
#         git config user.name "GitHub Actions Bot"
#         git config user.email "<>"

#     # to keep track of history, even though we deploy gh-pages ourselves
#     - name: commit
#       run: |
#         # Stage the file, commit and push
#         cd gh-pages
#         git add allure-report
#         git commit -m "reports"
#         git push origin gh-pages

#     - name: Upload artifact
#       uses: actions/upload-pages-artifact@v1
#       with:
#         # Upload report
#         path: gh-pages/allure-report

#   pages:

#     runs-on: ubuntu-latest
#     # if: github.ref == 'refs/heads/main'
#     needs: [report]

#     # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#     permissions:
#       contents: read
#       pages: write
#       id-token: write

#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}

#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1

# # https://docs.github.com/en/actions/using-workflows/reusing-workflows
# #
# # Will this workflow be able to checkout and push to its own repository, when called?
# #
# # jobs:
# #   call-workflow-1-in-local-repo:
# #     uses: octo-org/this-repo/.github/workflows/workflow-1.yml@172239021f7ba04fe7327647b213799853a9eb89
# #   call-workflow-2-in-local-repo:
# #     uses: ./.github/workflows/workflow-2.yml
# #   call-workflow-in-another-repo:
# #     uses: octo-org/another-repo/.github/workflows/workflow.yml@v1
