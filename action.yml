name: "Allure Multi"
description: "Generate multiple allure reports from artifacts and publish to gh-pages."
author: "dholth"
branding:
  icon: 'book'
  color: 'green'

# from actions/checkout
inputs:
  repository:
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
  ref:
    description: >
      The branch, tag or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that
      event.  Otherwise, uses the default branch.
  token:
    description: >
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    default: ${{ github.token }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v3
      with:
        # Don't know which Java is the best.
        distribution: 'temurin'
        java-version: '17'

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Download allure
      shell: bash
      run: |
        cd $RUNNER_TEMP
        curl -L -O https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.tgz
        tar -xf allure-2.20.0.tgz

    - name: Make reports
      shell: bash
      env:
        ALLURE_PATH: ${{ env.RUNNER_TEMP }}/allure-2.20.0/bin/allure
      run: |
        python $GITHUB_ACTION_PATH/action.py

    # # environments all set up.
    # - name: Download results from other repository
    #   shell: bash
    #   env:
    #     # necessary to run gh cli
    #     GH_TOKEN: ${{ github.token }}
    #   run: |

    #     # Some of these are results and others are reports.
    #     # In the future, upload results with a unique prefix.
    #     gh run download -p "allure-*" -R ${{ inputs.repository }} 3300350049

    #     # strip the existing allure-results/ embedded in the .tar.gz
    #     find -name allure-results.tar.gz -exec tar -xf {} --strip-components=1 \;

    # - name: Make report
    #   shell: bash
    #   run: |
    #     # todo python
    #     # allure generate --output <report dir> input-dir
    #     $RUNNER_TEMP/allure-2.20.0/bin/allure generate --clean ../temp

    - name: List everything
      shell: bash
      run: |
        ls -R
        pwd

        # this workflow?
        echo $GITHUB_ACTION_PATH
        ls -R $GITHUB_ACTION_PATH

        python3 --version

        env
